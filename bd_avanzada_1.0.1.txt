create database bd_control_asistencia_alumnadoPRUEBA;
use bd_control_asistencia_alumnadoPRUEBA;

CREATE TABLE Seccion (
    SeccionID INT AUTO_INCREMENT PRIMARY KEY,
    NombreSeccion VARCHAR(50),
    NumeroAula VARCHAR(20),
    Estado VARCHAR(20),
    FechaRegistro DATE,
    UsuarioRegistro VARCHAR(20),
    FechaActualizacion DATE
);
CREATE TABLE PadresTutores (
    TutorID INT AUTO_INCREMENT PRIMARY KEY,
    TipoDocumento VARCHAR(10),
    NumeroDocumento VARCHAR(16),
    Nombres VARCHAR(100),
    Apellidos VARCHAR(100),
    CorreoElectronico VARCHAR(100),
    TelefonoMovil VARCHAR(15),
    TelefonoCasa VARCHAR(15),
    Direccion VARCHAR(200),
    RelacionEstudiante VARCHAR(50),
    FechaNacimiento DATE,
    Ocupacion VARCHAR(100),
    Estado VARCHAR(20),
    RedesSociales TEXT,
    FechaRegistro DATE,
    UsuarioRegistro VARCHAR(20),
    FechaActualizacion DATE
);

CREATE TABLE Estudiante (
    EstudianteID INT AUTO_INCREMENT PRIMARY KEY,
    TipoDocumento VARCHAR(10),
    NumeroDocumento VARCHAR(16),
    Nombres VARCHAR(100),
    Apellidos VARCHAR(100),
    FechaNacimiento DATE,
    Genero VARCHAR(10),
    Email VARCHAR(100),
    Telefono VARCHAR(15),
    Direccion VARCHAR(200),
    EstadoCivil VARCHAR(20),
    FechaIngreso DATE,
    Estado VARCHAR(20),
    RedesSociales TEXT,
    EmergenciaContacto VARCHAR(200),
    TutorID INT,
    FechaRegistro DATE,
    UsuarioRegistro VARCHAR(20),
    FechaActualizacion DATE,
    FOREIGN KEY (TutorID) REFERENCES PadresTutores(TutorID)
);

CREATE TABLE Profesor (
    ProfesorID INT AUTO_INCREMENT PRIMARY KEY,
    TipoDocumento VARCHAR(10),
    NumeroDocumento VARCHAR(16),
    Nombres VARCHAR(100),
    Apellidos VARCHAR(100),
    FechaNacimiento DATE,
    CorreoInstitucional VARCHAR(100),
    TelefonoMovil VARCHAR(15),
    TelefonoTrabajo VARCHAR(15),
    FechaContratacion DATE,
    Especialidad VARCHAR(100),
    GradoAcademico VARCHAR(50),
    HorasDocencia INT,
    Estado VARCHAR(20),
    Direccion VARCHAR(200),
    ModalidadTrabajo VARCHAR(50),
    RedesSociales TEXT,
    FechaRegistro DATE,
    UsuarioRegistro VARCHAR(20),
    FechaActualizacion DATE
);

CREATE TABLE Curso (
    CursoID INT AUTO_INCREMENT PRIMARY KEY,
    CodigoCurso VARCHAR(20),
    NombreCurso VARCHAR(100),
    Descripcion VARCHAR(255),
    Duracion INT,
    Grado VARCHAR(50),
    Nivel VARCHAR(50),
    Estado VARCHAR(20),
    RequisitosPrevios TEXT,
    CantidadMaximaEstudiantes INT,
    Modalidad VARCHAR(50),
    SeccionID INT,
    Notas TEXT,
    FechaRegistro DATE,
    UsuarioRegistro VARCHAR(20),
    FechaActualizacion DATE

);

CREATE TABLE PersonalAdministrativo (
    PersonalID INT PRIMARY KEY,
    TipoDocumento VARCHAR(10),
    NumeroDocumento VARCHAR(16),
    Nombres VARCHAR(100),
    Apellidos VARCHAR(100),
    CorreoElectronico VARCHAR(100),
    TelefonoMovil VARCHAR(15),
    TelefonoTrabajo VARCHAR(15),
    FechaNacimiento DATE,
    Direccion VARCHAR(200),
    Cargo VARCHAR(100),
    FechaContratacion DATE,
    Estado VARCHAR(20),
    Sueldo DECIMAL(10, 2),
    RedesSociales TEXT,
    FechaRegistro DATE,
    UsuarioRegistro VARCHAR(20),
    FechaActualizacion DATE
);

CREATE TABLE Asistencia (
    AsistenciaID INT AUTO_INCREMENT PRIMARY KEY,
    EstudianteID INT,
    CursoID INT,
    PersonalID INT null,
    HoraAsistencia TIMESTAMP,
    Estado VARCHAR(20),
    Comentario TEXT null,
    TipoAsistencia VARCHAR(50),
    FechaRegistro DATE,
    UsuarioRegistro VARCHAR(20),
    FechaActualizacion DATE null,
    FOREIGN KEY (EstudianteID) REFERENCES Estudiante(EstudianteID),
    FOREIGN KEY (CursoID) REFERENCES Curso(CursoID),
    FOREIGN KEY (PersonalID) REFERENCES PersonalAdministrativo(PersonalID)
);


DELIMITER $$

CREATE PROCEDURE usp_obtener_asistencia(
    IN p_CursoID INT,
    IN p_FechaInicio DATE,
    IN p_FechaFin DATE
)
BEGIN
    SELECT 
        A.AsistenciaID,
        A.EstudianteID,
        A.CursoID,
        C.NombreCurso,
        E.Nombres,
        E.Apellidos,
        A.PersonalID,
        A.HoraAsistencia,
        A.Estado,
        A.Comentario,
        A.TipoAsistencia,
        A.FechaRegistro,
        A.UsuarioRegistro,
        A.FechaActualizacion
    FROM 
        Asistencia A
   JOIN Curso C
   ON A.CursoID = C.CursoID
   JOIN Estudiante E
   ON A.EstudianteID = E.EstudianteID

    WHERE 
		A.CursoID = p_CursoID
        AND A.FechaRegistro BETWEEN p_FechaInicio AND p_FechaFin;
END $$

DELIMITER ;

DELIMITER $$

DELIMITER $$

CREATE PROCEDURE usp_obtener_asistencia_por_tipo_fecha(
    IN p_Tipo_Asistencia VARCHAR(20),
    IN p_Fecha DATE
)
BEGIN
    SELECT 
        A.AsistenciaID,
        A.EstudianteID,
        A.CursoID,
        C.NombreCurso,
        E.Nombres,
        E.Apellidos,
        A.PersonalID,
        A.HoraAsistencia,
        A.Estado,
        A.Comentario,
        A.TipoAsistencia,
        A.FechaRegistro,
        A.UsuarioRegistro,
        A.FechaActualizacion
    FROM 
        Asistencia A
    JOIN Curso C ON A.CursoID = C.CursoID
    JOIN Estudiante E ON A.EstudianteID = E.EstudianteID
    WHERE 
        A.TipoAsistencia = p_Tipo_Asistencia
        AND A.FechaRegistro = p_Fecha;
END $$

DELIMITER ;



CREATE TABLE Roles (
    RoleID INT PRIMARY KEY AUTO_INCREMENT,
    NombreRole VARCHAR(50) NOT NULL
);



CREATE TABLE Usuarios (
    UsuarioID INT PRIMARY KEY AUTO_INCREMENT,
    NombreUsuario VARCHAR(50) NOT NULL,
    Contrasena VARCHAR(255) NOT NULL,
    RoleID INT NOT NULL,
    FechaRegistro DATE,
    Estado VARCHAR(20),
    FOREIGN KEY (RoleID) REFERENCES Roles(RoleID)
);

